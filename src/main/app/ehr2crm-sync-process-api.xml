<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tls="http://www.mulesoft.org/schema/mule/tls" 
	xmlns:api-platform-gw="http://www.mulesoft.org/schema/mule/api-platform-gw" 
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" 
	xmlns:json="http://www.mulesoft.org/schema/mule/json" 
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" 
	xmlns:http="http://www.mulesoft.org/schema/mule/http" 
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/api-platform-gw http://www.mulesoft.org/schema/mule/api-platform-gw/current/mule-api-platform-gw.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd" >

	<context:property-placeholder location="common.properties, mule.${mule.env}.properties"/>
    
    <http:listener-config name="api-httpListenerConfig" host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration" >
    </http:listener-config>
    
<!--     <api-platform-gw:api id="${api.id}" apiName="${api.name}" version="${api.version}" flowRef="api-main" doc:name="API Autodiscovery"></api-platform-gw:api> -->
    <apikit:config name="api-config" raml="healthcare-ehr2crm-sync-process-api.raml" consoleEnabled="true" consolePath="console" doc:name="Router">
        <apikit:flow-mapping resource="/patients/{patientId}/migrateClinicalData" action="post" flow-ref="post:/patients/{patientId}/migrateClinicalData:api-config"/>

    </apikit:config>
    <http:request-config name="ehr-system-api" protocol="HTTP" host="${ehr.system.api.host}" port="${ehr.system.api.port}" basePath="${ehr.system.api.basePath}" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="healthcare-system-api/healthcare-system-api.raml"/>

    </http:request-config>
    <http:request-config name="sfhc-system-api" protocol="HTTP" host="${sfdc.system.api.host}" port="${sfdc.system.api.port}" basePath="${sfdc.system.api.basePath}" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="healthcare-system-api/healthcare-system-api.raml"/>
    </http:request-config>
    
    <flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>

     <flow name="post:/patients/{patientId}/migrateClinicalData:api-config"  >
        <http:request config-ref="ehr-system-api" path="/Patient/{id}" method="GET" doc:name="GET Patient from EHR">
            <http:request-builder>
                <http:uri-param paramName="id" value="#[flowVars.patientId]"/>
            </http:request-builder>
            <http:success-status-code-validator values="200,404"/>
        </http:request>
        <choice doc:name="Patient found?">
            <when expression="#[message.inboundProperties.'http.status' == 200]">
                <flow-ref name="migratePatient" doc:name="migratePatient"/>
                <set-payload value="#[NullPayload.getInstance()]" doc:name="NullPayload"/>
                <async doc:name="Async">
                    <scatter-gather doc:name="Scatter-Gather">
                        <flow-ref name="migrateConditions" doc:name="migrateConditions"/>
                        <flow-ref name="migrateAllergyIntolerances" doc:name="migrateAllergyIntolerances"/>
                        <flow-ref name="migrateAppointments" doc:name="migrateAppointments"/>
                    </scatter-gather>
                </async>
                <logger message="The Async POST process has started." level="INFO" doc:name="Log success"/>
                <dw:transform-message doc:name="Create response JSON">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"message": "The migration process has started and will be completed asynchronously."
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="#[404]" doc:name="404"/>
                <set-payload value="{&quot;message&quot;: &quot;Patient not found&quot;}" doc:name="Not Found"/>
            </otherwise>
        </choice>


    </flow>
    <sub-flow name="migratePatient">

        <dw:transform-message doc:name="Add identifier and active field">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload ++ 
{ 
	active: true,
	identifier : [{
		value: payload.id as :string {format: "#"}
	}]
}
]]></dw:set-payload>
        </dw:transform-message>

        <enricher source="#[payload]" target="#[flowVars.sfhcPatientId]" doc:name="Message Enricher">
            <processor-chain doc:name="Processor Chain">
                <http:request config-ref="sfhc-system-api" path="/Patient" method="GET" doc:name="GET Patient from SFHC">
                    <http:request-builder>
                        <http:query-param paramName="identifier" value="#[payload.identifier[0].value]"/>
                    </http:request-builder>
                </http:request>

                <dw:transform-message doc:name="Get existing Patient Id from JSON response">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.entry[0].resource.id as :string {format: "#"} when (payload.total > 0) otherwise null]]></dw:set-payload>
                </dw:transform-message>
            </processor-chain>
        </enricher>

        <choice doc:name="Is patient missing in SFHC?">
            <when expression="#[flowVars.sfhcPatientId == null]">
                <logger message="Creating: #[payload]" level="INFO" doc:name="Create branch"/>

                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <http:request config-ref="sfhc-system-api" path="/Patient" method="POST" doc:name="POST Patient into SFDC"/>
            </when>
            <otherwise>
                <logger message="Updating: #[payload]" level="INFO" doc:name="Update branch"/>

                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <http:request config-ref="sfhc-system-api" path="/Patient/{id}" method="PUT" doc:name="PUT Patient into SFDC">
                    <http:request-builder>
                        <http:uri-param paramName="id" value="#[flowVars.sfhcPatientId]"/>
                    </http:request-builder>
                </http:request>
            </otherwise>
        </choice>


    </sub-flow>
    <sub-flow name="migratePractitioners">
        <http:request config-ref="ehr-system-api" path="/Practitioner" method="GET" doc:name="GET Practitioners from EHR"/>
        <dw:transform-message doc:name="Extract practitioners and add identifier">
            <dw:input-payload doc:sample="sample_data\json.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.entry map (
	$.resource ++ 
	{ 
		identifier : [{
			value: $.resource.id as :string {format: "#"}
		}]
	}
)]]></dw:set-payload>
        </dw:transform-message>
        <foreach collection="payload" doc:name="For Each Practitioner">

            <enricher source="#[payload]" target="#[flowVars.sfhcPractitionerId]" doc:name="save to var sfhcPractitionerId">
                <processor-chain doc:name="Processor Chain">
                    <http:request config-ref="sfhc-system-api" path="/Practitioner" method="GET" doc:name="GET Practitioner from SFHC">
                        <http:request-builder>
                            <http:query-param paramName="identifier" value="#[payload.identifier[0].value]"/>

                        </http:request-builder>
                    </http:request>
                    <dw:transform-message doc:name="extract ID">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.entry[0].resource.id as :string {format: "#"} when payload.total > 0 otherwise null]]></dw:set-payload>
                    </dw:transform-message>
                </processor-chain>

            </enricher>


            <choice doc:name="Is the Practitioner missing in SFHC?">
                <when expression="#[flowVars.sfhcPractitionerId == null]">
                    <logger message="Creating: #[payload]" level="INFO" doc:name="Create branch"/>
                    <json:object-to-json-transformer doc:name="Object to JSON"/>
                    <http:request config-ref="sfhc-system-api" path="/Practitioner" method="POST" doc:name="POST Practitioner into SFHC"/>
                </when>
                <otherwise>
	                <logger message="Updating: #[payload]" level="INFO" doc:name="Update branch"/>
                    <json:object-to-json-transformer doc:name="Object to JSON"/>
                    <http:request config-ref="sfhc-system-api" path="/Practitioner/{id}" method="PUT" doc:name="PUT Practitioner into SFHC">
                        <http:request-builder>
                            <http:uri-param paramName="id" value="#[flowVars.sfhcPractitionerId]"/>
                        </http:request-builder>
                    </http:request>
                </otherwise>
            </choice>
        </foreach>

    </sub-flow>
    <sub-flow name="migrateConditions">
        <http:request config-ref="ehr-system-api" path="/Patient/{id}/Condition" method="GET" doc:name="GET Conditions from EHR">
            <http:request-builder>
                <http:uri-param paramName="id" value="#[flowVars.patientId]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Extract Conditions and add identifier">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.entry filter $.resource.verificationStatus == "confirmed" map 
(
	$.resource ++ 
	{ 
		identifier : [{
			value: $.resource.id as :string {format: "#"}
		}]
	}
)]]></dw:set-payload>
        </dw:transform-message>
        <foreach collection="payload" doc:name="For Each Condition">

            <enricher source="#[payload]" target="#[flowVars.sfhcConditionId]" doc:name="save to var sfhcConditionId">
                <processor-chain doc:name="Processor Chain">
                    <http:request config-ref="sfhc-system-api" path="/Condition" method="GET" doc:name="GET Condition from SFHC">
                        <http:request-builder>
                            <http:query-param paramName="identifier" value="#[payload.identifier[0].value]"/>

                        </http:request-builder>
                    </http:request>
                    <dw:transform-message doc:name="extract ID">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.entry[0].resource.id as :string {format: "#"} when payload.total > 0 otherwise null]]></dw:set-payload>
                    </dw:transform-message>
                </processor-chain>
            </enricher>

            <choice doc:name="Is the Condition missing in SFHC?">
                <when expression="#[flowVars.sfhcConditionId == null]">
					<logger message="Creating: #[payload]" level="INFO" doc:name="Create branch"/>
                    <json:object-to-json-transformer doc:name="Object to JSON"/>
                    <http:request config-ref="sfhc-system-api" path="/Condition" method="POST" doc:name="POST Condition into SFDC"/>
                </when>
                <otherwise>
                	<logger message="Updating #[payload]" level="INFO" doc:name="Update branch"/>
                    <json:object-to-json-transformer doc:name="Object to JSON"/>
                    <http:request config-ref="sfhc-system-api" path="/Condition/{id}" method="PUT" doc:name="PUT Condition into SFDC">
                        <http:request-builder>
                            <http:uri-param paramName="id" value="#[flowVars.sfhcConditionId]"/>
                        </http:request-builder>
                    </http:request>
                </otherwise>
            </choice>
        </foreach>
    </sub-flow> 
    
    
    <sub-flow name="migrateAllergyIntolerances">
        <http:request config-ref="ehr-system-api" path="/Patient/{id}/AllergyIntolerance" method="GET" doc:name="GET AllergyIntolerances from EHR">
            <http:request-builder>
                <http:uri-param paramName="id" value="#[flowVars.patientId]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Extract Allergies and add identifier">
            <dw:input-payload doc:sample="sample_data\json_1.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.entry filter $.resource.status == "confirmed" map (

	$.resource ++ 
	{ 
		identifier : [{
			value: $.resource.id as :string {format: "#"}
		}]
	}
)]]></dw:set-payload>
        </dw:transform-message>
        <foreach collection="payload" doc:name="For Each AllergyIntolerance">

            <enricher source="#[payload]" target="#[flowVars.sfdcAllergyId]" doc:name="save to var sfhcAllergyId">
                <processor-chain doc:name="Processor Chain">
                    <http:request config-ref="sfhc-system-api" path="/AllergyIntolerance" method="GET" doc:name="GET AllergyIntolerance from SFHC">
                        <http:request-builder>
                            <http:query-param paramName="identifier" value="#[payload.identifier[0].value]"/>
                        </http:request-builder>
                    </http:request>
                    <dw:transform-message doc:name="extract ID">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.entry[0].resource.id when payload.total > 0 otherwise null]]></dw:set-payload>
                    </dw:transform-message>
                </processor-chain>
            </enricher>
            <choice doc:name="Is the AllergyIntolerance missing in SFHC?">
                <when expression="#[flowVars.sfdcAllergyId == null]">
                    <logger message="Creating: #[payload]" level="INFO" doc:name="Create branch"/>
                    <json:object-to-json-transformer doc:name="Object to JSON"/>
                    <http:request config-ref="sfhc-system-api" path="/AllergyIntolerance" method="POST" doc:name="POST AllergyIntolerance into SFDC"/>
                </when>
                <otherwise>
                	<logger message="Updating #[payload]" level="INFO" doc:name="Update branch"/>
                    <json:object-to-json-transformer doc:name="Object to JSON"/>
                    <http:request config-ref="sfhc-system-api" path="/AllergyIntolerance/{id}" method="PUT" doc:name="PUT AllergyIntolerance into SFDC">
                        <http:request-builder>
                            <http:uri-param paramName="id" value="#[flowVars.sfdcAllergyId]"/>


                        </http:request-builder>
                    </http:request>
                </otherwise>
            </choice>
        </foreach>
    </sub-flow>
    
    <sub-flow name="migrateAppointments">
        <http:request config-ref="ehr-system-api" path="/Patient/{id}/Appointment" method="GET" doc:name="GET Appointments from EHR">
            <http:request-builder>
                <http:uri-param paramName="id" value="#[flowVars.patientId]"/>
            </http:request-builder>
        </http:request>

        <dw:transform-message doc:name="Extract Appointments and add identifier">
            <dw:input-payload doc:sample="sample_data\json.json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.entry map (
	$.resource ++ 
	{ 
		identifier : [{
			value: $.resource.id as :string {format: "#"}
		}]
	}
)]]></dw:set-payload>
        </dw:transform-message>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map (($ - "minutesDuration") when  ($.minutesDuration == "") otherwise $)]]></dw:set-payload>
        </dw:transform-message>
        <foreach collection="payload" doc:name="For Each Appointment">

            <enricher source="#[payload]" target="#[flowVars.sfhcAppointmentId]" doc:name="save to var sfhcAppointmentId">
                <processor-chain doc:name="Processor Chain">
                    <http:request config-ref="sfhc-system-api" path="/Appointment" method="GET" doc:name="GET Appointment from SFHC">
                        <http:request-builder>
                            <http:query-param paramName="identifier" value="#[payload.identifier[0].value]"/>
                        </http:request-builder>
                    </http:request>
                    <dw:transform-message doc:name="extract ID">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.entry[0].resource.id as :string {format: "#"} when payload.total > 0 otherwise null]]></dw:set-payload>
                    </dw:transform-message>
                </processor-chain>
            </enricher>
            <choice doc:name="Is the Appointment missing in SFHC?">
                <when expression="#[flowVars.sfhcAppointmentId == null]">
                	<logger message="Creating: #[payload]" level="INFO" doc:name="Create branch"/>
                    <json:object-to-json-transformer doc:name="Object to JSON"/>
                    <http:request config-ref="sfhc-system-api" path="/Appointment" method="POST" doc:name="POST Appointment into SFHC"/>
                </when>
                <otherwise>
                	<logger message="Updating #[payload]" level="INFO" doc:name="Update branch"/>
                    <json:object-to-json-transformer doc:name="Object to JSON"/>
                    <http:request config-ref="sfhc-system-api" path="/Appointment/{id}" method="PUT" doc:name="PUT Appointment into SFHC">
                        <http:request-builder>
                            <http:uri-param paramName="id" value="#[flowVars.sfhcAppointmentId]"/>
                        </http:request-builder>
                    </http:request>
                </otherwise>
            </choice>
        </foreach>
    </sub-flow>
    

    <apikit:mapping-exception-strategy name="api-apiKitGlobalExceptionMapping">
    
        <apikit:mapping statusCode="401">
            <apikit:exception value="org.mule.api.security.UnauthorisedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unauthorized&quot; ,&quot;service&quot; : &quot;clinicalData&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="404" doc:description="Only GET EHR Patient by ID is supposed to return 404 if not found">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot;,&quot;service&quot; : &quot;clinicalData&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot;,&quot;service&quot; : &quot;clinicalData&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; ,&quot;service&quot; : &quot;clinicalData&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; ,&quot;service&quot; : &quot;clinicalData&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; ,&quot;service&quot; : &quot;clinicalData&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="500">
            <apikit:exception value="java.lang.Exception"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{&quot;message&quot; : &quot;Internal Server Error&quot;,&quot;service&quot; : &quot;clinicalData&quot;, &quot;reason&quot; : &quot;#[exception.getSummaryMessage()]&quot;}" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
    
</mule>
